function exportJsonToFile() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const sheet = ss.getSheetByName("Data"); 
  if (!sheet) {
    throw new Error("指定されたシート名が存在しません。シート名を確認してください。");
  }

  const rows = sheet.getDataRange().getValues();
  const headers = rows.shift();

  // ★ 固定ヘッダ（Name / Version）を先に作る
  let result = {
    Name: "Address",  // 固定
    Version: "1.0"    // 固定
  };

  // 各行を JSON オブジェクトに変換し、「name」列をキーにする
  rows.forEach(row => {
    let obj = {};
    headers.forEach((header, i) => {
      setNestedValue(obj, header, row[i]);
    });

    // name フィールドをキーにして格納
    const key = obj.name;
    if (!key) {
      throw new Error("name カラムが空です。キーにできません。");
    }
    delete obj.name; // 内部データからは name を削除（キーに昇格するため）
    result[key] = obj;
  });

  // JSON に変換
  const json = JSON.stringify(result, null, 2);

  // 保存先フォルダ
  const folderId = "フォルダID"; // ←置き換え
  const folder = DriveApp.getFolderById(folderId);

  // ファイル名
  const fileName = "export.json";

  // JSON をファイルに保存
  const blob = Utilities.newBlob(json, "application/json", fileName);
  folder.createFile(blob);

  Logger.log("JSON を書き出しました: " + fileName);
}

// ネストした値を設定するユーティリティ
function setNestedValue(obj, key, value) {
  if (!key) return;
  const keys = key.split(".");
  let current = obj;

  keys.forEach((k, idx) => {
    const isLast = idx === keys.length - 1;
    const isArrayIndex = !isNaN(k);

    if (isLast) {
      if (isArrayIndex) {
        const index = parseInt(k, 10);
        if (!Array.isArray(current)) current = [];
        current[index] = value;
      } else {
        current[k] = value;
      }
    } else {
      const nextKey = keys[idx + 1];
      const nextIsArray = !isNaN(nextKey);

      if (isArrayIndex) {
        const index = parseInt(k, 10);
        if (!Array.isArray(current)) current = [];
        if (!current[index]) current[index] = nextIsArray ? [] : {};
        current = current[index];
      } else {
        if (!current[k]) current[k] = nextIsArray ? [] : {};
        current = current[k];
      }
    }
  });
}